{
  "contractName": "TypeStorageInterface",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50604380601d6000396000f3fe6080604052600080fdfea265627a7a72305820b121215b577d71e4b7dfab57fc5b442767946c9b1ead3983252899833afb68d16c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72305820b121215b577d71e4b7dfab57fc5b442767946c9b1ead3983252899833afb68d16c6578706572696d656e74616cf50037",
  "sourceMap": "59:583:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:583:5;;;;;;;",
  "deployedSourceMap": "59:583:5:-;;;;;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\ninterface TypeStorageInterface {\n\n    /* struct Type1 {\n        uint256 balance;\n        address owner;\n    }\n\n    function isStored(bytes32 hash) external view returns(bool isIndeed);\n    function insert(Type1 calldata data) external returns (bytes32 hasho, uint256 index);\n    function get(bytes32 hash) external view returns(Type1 memory data);\n    function remove(bytes32 hash) external returns(uint256 index);\n    function update(bytes32 hashi, Type1 calldata data) external returns(bytes32 hash, uint256 index);\n    function count() external view returns(uint256 counter); */\n}\n",
  "sourcePath": "/Users/loredana/ETH/dType/contracts/contracts/dtypes/TypeStorageInterface.sol",
  "ast": {
    "absolutePath": "/Users/loredana/ETH/dType/contracts/contracts/dtypes/TypeStorageInterface.sol",
    "exportedSymbols": {
      "TypeStorageInterface": [
        1196
      ]
    },
    "id": 1197,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1194,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 1195,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1196,
        "linearizedBaseContracts": [
          1196
        ],
        "name": "TypeStorageInterface",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 1197,
        "src": "59:583:5"
      }
    ],
    "src": "0:643:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/loredana/ETH/dType/contracts/contracts/dtypes/TypeStorageInterface.sol",
    "exportedSymbols": {
      "TypeStorageInterface": [
        1196
      ]
    },
    "id": 1197,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1194,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 1195,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1196,
        "linearizedBaseContracts": [
          1196
        ],
        "name": "TypeStorageInterface",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 1197,
        "src": "59:583:5"
      }
    ],
    "src": "0:643:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-18T17:47:17.041Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}