#font: Calibri
#fontSize: 12
#fill: #ffffff; #ffffff

[ <package> dType |

[dType Registry |
[dSubType |
string name
string label
uint8 relation
]
[dTypeStruct |
uint8 lang
uint8 typeChoice
address contractAddress
bytes32 source
string name
dSubType\[\] types
]
[dTypeStruct]+-> 0..*[dSubType]
[dTypeStruct]o-[<state>types]
[types] ....1..*->[dTypeStruct]

|
typeCollection (typeHash -> dTypeStruct)
|
insert(dType data)
get(typeHash)
delete(typeHash)
count()
]


[dType Registry]->contractAddress[TypeContract]

[TypeContract]-->[TypeLib | |
  structure(bytes)
  destructure(Type data)
  map(Type\[\] dataArray, Function callb)

]
[TypeContract]-->[TypeStorage]

[TypeStorage|
bytes32\[\] public dataIndex
mapping(bytes32 => Type) public dataStorage
|
insert(Type data)
get(bytes32 dataHash)
delete(bytes32 dataHash)
update(bytes32 dataHash, Type data)
count()
]

]
